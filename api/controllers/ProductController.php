<?php

namespace panix\mod\shop\api\controllers;

use panix\engine\CMS;
use panix\engine\api\Serializer;
use yii\filters\AccessControl;
use Yii;
use yii\data\ActiveDataProvider;
use yii\filters\auth\CompositeAuth;
use yii\filters\auth\HttpBasicAuth;
use yii\filters\auth\HttpBearerAuth;
use yii\filters\auth\QueryParamAuth;
use yii\filters\ContentNegotiator;
use yii\helpers\ArrayHelper;
use yii\rest\ActiveController;
use yii\web\Response;

/**
 * Class ProductController
 * @package panix\mod\shop\api\controllers
 */
class ProductController extends ActiveController
{
    public $modelClass = 'panix\mod\shop\api\models\Product';
    public $serializer = [
        'class' => Serializer::class,
    ];

    public function init22()
    {
        //Yii::$app->language = 'ru';
        parent::init(); // TODO: Change the autogenerated stub

        // CMS::dump(Yii::$app->urlManager);die;

        Yii::$app->user->enableSession = false;
    }

    public function behaviors()
    {
        return [
            //'rateLimiter' => [
            //    'class' => \yii\filters\RateLimiter::class,
            //    'enableRateLimitHeaders' => true,
            //],
            'contentNegotiator' => [
                'class' => ContentNegotiator::class,
                'formatParam' => 'format',
                'formats' => [
                    'json' => Response::FORMAT_JSON,
                ]
            ],
            'corsFilter' => [
                'class' => \yii\filters\Cors::class,
            ],
            /*'authenticator' => [
                'class' => CompositeAuth::class,
                'authMethods' => [
                    HttpBasicAuth::class,
                    //HttpBearerAuth::class,
                    // QueryParamAuth::class,
                ],
            ],*/
            /*'authenticator222' => [
                'class' => HttpBasicAuth::class,
                'auth' => function ($username, $password) {

                    $user = User::find()->where(['username' => $username, 'password' => $password])->one();
                    if ($user->verifyPassword($password)) {
                        return $user;
                    }
                },
            ],
            'authenticator' => [
                'class' => QueryParamAuth::class,
                'tokenParam' => 'token',
            ],
            'access' => [
                'class' => AccessControl::class,
                'rules' => [
                    [
                        'allow' => true,
                        'roles' => ['@']
                    ]
                ],
            ]*/
        ];
    }

    public function actionNew()
    {
//Yii::$app->response->format = Response::FORMAT_JSON;
        $requestParams = Yii::$app->getRequest()->getBodyParams();
        if (empty($requestParams)) {
            $requestParams = Yii::$app->getRequest()->getQueryParams();
        }

        /* @var $modelClass \yii\db\BaseActiveRecord */
        $modelClass = $this->modelClass;

        $query = $modelClass::find();
        if (!empty($filter)) {
            $query->andWhere($filter);
        }

        return Yii::createObject([
            'class' => ActiveDataProvider::class,
            'query' => $query,
            'pagination' => [
                'params' => $requestParams,
            ],
            'sort' => [
                'params' => $requestParams,
            ],
        ]);
    }


    public function actionLogin()
    {
        $model = new LoginForm();
        if ($model->load(Yii::$app->getRequest()->getBodyParams(), '') && $model->login()) {
            return [
                'access_token' => $model->login(),
            ];
        } else {
            return $model->getFirstErrors();
        }
    }

    public function actionView222($id)
    {
        die('123');
        $model = $this->findModel($id);
        return $model;

    }

    public function actionIndex()
    {

        $requestParams = Yii::$app->getRequest()->getBodyParams();
        if (empty($requestParams)) {
            $requestParams = Yii::$app->getRequest()->getQueryParams();
        }

        /* @var $modelClass \yii\db\BaseActiveRecord */
        $modelClass = $this->modelClass;

        $query = $modelClass::find();
        $query->sort();
        $query->publushed();
        if (!empty($filter)) {
            $query->andWhere($filter);
        }

        return Yii::createObject([
            'class' => ActiveDataProvider::class,
            'query' => $query,
            'pagination' => [
                'params' => $requestParams,
            ],
            'sort' => [
                'params' => $requestParams,
            ],
        ]);
    }


}


